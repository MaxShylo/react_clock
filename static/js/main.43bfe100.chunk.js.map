{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerUpdateDate","this","window","setInterval","setState","console","info","toLocaleTimeString","prevProps","currentName","props","name","prevName","debug","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","timerChangeName","handleDocumentContextMenu","event","preventDefault","handleDocumentClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,gBAAkB,EALpB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,gBAAkBE,OAAOC,aAAY,WACxC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBO,QAAQC,KAAKR,EAAKS,wBACjB,OAdP,gCAiBE,SAAmBC,GACjB,IAAMC,EAAcR,KAAKS,MAAMC,KACzBC,EAAWJ,EAAUG,KAEvBF,IAAgBG,GAElBP,QAAQQ,MAAR,uBAA8BD,EAA9B,eAA6CH,MAvBnD,kCA2BE,WACEK,cAAcb,KAAKD,mBA5BvB,oBA+BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAa,EAASV,KAAKS,MAAdC,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGjB,EAAKS,8BA5ChB,GAA2BS,aCL3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACE1B,MAAyB,CACvB2B,UAAU,EACVC,UAAW,WAHf,EAMEC,gBAAkB,EANpB,EAwBEC,0BAA4B,SAACC,GAC3BA,EAAMC,iBAEN,EAAKzB,SAAS,CAAEoB,UAAU,KA3B9B,EA8BEM,oBAAsB,WACpB,EAAK1B,SAAS,CAAEoB,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,cAAe/B,KAAK0B,2BAC9CI,SAASC,iBAAiB,QAAS/B,KAAK6B,qBAExC7B,KAAKyB,gBAAkBxB,OAAOC,aAAY,WACxC,EAAKC,SAAS,CAAEqB,UAAWR,QAC1B,QAdP,kCAiBE,WACEc,SAASE,oBAAoB,cAAehC,KAAK0B,2BACjDI,SAASE,oBAAoB,QAAShC,KAAK6B,qBAE3ChB,cAAcb,KAAKyB,mBArBvB,oBAkCE,WACE,MAAgCzB,KAAKJ,MAA7B2B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOb,KAAMc,WAzClC,GAAyBT,aCbzBkB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.43bfe100.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerUpdateDate = 0;\n\n  componentDidMount() {\n    this.timerUpdateDate = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n      // eslint-disable-next-line\n      console.info(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const currentName = this.props.name;\n    const prevName = prevProps.name;\n\n    if (currentName !== prevName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerUpdateDate);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './components';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerChangeName = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleDocumentContextMenu);\n    document.addEventListener('click', this.handleDocumentClick);\n\n    this.timerChangeName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleDocumentContextMenu);\n    document.removeEventListener('click', this.handleDocumentClick);\n\n    clearInterval(this.timerChangeName);\n  }\n\n  handleDocumentContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleDocumentClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}